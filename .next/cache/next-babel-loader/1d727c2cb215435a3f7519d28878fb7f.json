{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CART } from \"../variables\";\nconst initialState = [];\nexport default function cartReducer(state = initialState, action) {\n  const cartItem = state.find(item => item.cartId === action.cartId);\n  const cartItemIndex = cartItem && state.indexOf(cartItem);\n\n  switch (action.type) {\n    case CART.ADD_TO_CART:\n      if (!action.product.variation || action.product.variation.length === 0) {\n        const addedCartItem = state.find(item => item.id === action.product.id);\n        const addedCartItemIndex = addedCartItem && state.indexOf(addedCartItem);\n\n        if (!addedCartItem) {\n          return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n            cartQuantity: action.quantity || 1,\n            cartId: uuidv4()\n          })];\n        } else {\n          return [...state.slice(0, addedCartItemIndex), _objectSpread(_objectSpread({}, addedCartItem), {}, {\n            cartQuantity: action.quantity ? addedCartItem.cartQuantity + action.quantity : addedCartItem.cartQuantity + 1\n          }), ...state.slice(addedCartItemIndex + 1)];\n        }\n      } else {\n        if (!action.color || action.color === \"\") {\n          const addedCartItem = state.find(item => item.id === action.product.id);\n          const addedCartItemIndex = addedCartItem && state.indexOf(addedCartItem);\n\n          if (!addedCartItem) {\n            return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n              cartQuantity: action.quantity || 1,\n              cartId: uuidv4()\n            })];\n          } else {\n            return [...state.slice(0, addedCartItemIndex), _objectSpread(_objectSpread({}, addedCartItem), {}, {\n              cartQuantity: action.quantity ? addedCartItem.cartQuantity + action.quantity : addedCartItem.cartQuantity + 1\n            }), ...state.slice(addedCartItemIndex + 1)];\n          }\n        } else {\n          const addedCartItem = state.find(item => item.id === action.product.id && item.selectedColor && item.selectedColor === action.color);\n          const addedCartItemIndex = addedCartItem && state.indexOf(addedCartItem);\n\n          if (!addedCartItem) {\n            return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n              cartQuantity: action.quantity || 1,\n              selectedColor: action.color,\n              cartId: uuidv4()\n            })];\n          } else {\n            return [...state.slice(0, addedCartItemIndex), _objectSpread(_objectSpread({}, addedCartItem), {}, {\n              cartQuantity: action.quantity ? addedCartItem.cartQuantity + action.quantity : addedCartItem.cartQuantity + 1\n            }), ...state.slice(addedCartItemIndex + 1)];\n          }\n        }\n      }\n\n    case CART.REMOVE_FROM_CART:\n      return [...state.slice(0, cartItemIndex), ...state.slice(cartItemIndex + 1)];\n\n    case CART.REMOVE_ALL_FROM_CART:\n      return [];\n\n    case CART.INCREASE_QUANTITY_CART:\n      return [...state.slice(0, cartItemIndex), _objectSpread(_objectSpread({}, cartItem), {}, {\n        cartQuantity: cartItem.cartQuantity + 1\n      }), ...state.slice(cartItemIndex + 1)];\n\n    case CART.DECREASE_QUANTITY_CART:\n      if (cartItem.cartQuantity < 2) {\n        return;\n      }\n\n      return [...state.slice(0, cartItemIndex), _objectSpread(_objectSpread({}, cartItem), {}, {\n        cartQuantity: cartItem.cartQuantity - 1\n      }), ...state.slice(cartItemIndex + 1)];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/hguruman/WORK/gents/tgs/src/redux/reducers/cartReducer.js"],"names":["v4","uuidv4","CART","initialState","cartReducer","state","action","cartItem","find","item","cartId","cartItemIndex","indexOf","type","ADD_TO_CART","product","variation","length","addedCartItem","id","addedCartItemIndex","cartQuantity","quantity","slice","color","selectedColor","REMOVE_FROM_CART","REMOVE_ALL_FROM_CART","INCREASE_QUANTITY_CART","DECREASE_QUANTITY_CART"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CART } from \"../variables\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function cartReducer(state = initialState, action) {\r\n  const cartItem = state.find((item) => item.cartId === action.cartId);\r\n  const cartItemIndex = cartItem && state.indexOf(cartItem);\r\n  switch (action.type) {\r\n    case CART.ADD_TO_CART:\r\n      if (!action.product.variation || action.product.variation.length === 0) {\r\n        const addedCartItem = state.find(\r\n          (item) => item.id === action.product.id\r\n        );\r\n        const addedCartItemIndex =\r\n          addedCartItem && state.indexOf(addedCartItem);\r\n        if (!addedCartItem) {\r\n          return [\r\n            ...state,\r\n            {\r\n              ...action.product,\r\n              cartQuantity: action.quantity || 1,\r\n              cartId: uuidv4(),\r\n            },\r\n          ];\r\n        } else {\r\n          return [\r\n            ...state.slice(0, addedCartItemIndex),\r\n            {\r\n              ...addedCartItem,\r\n              cartQuantity: action.quantity\r\n                ? addedCartItem.cartQuantity + action.quantity\r\n                : addedCartItem.cartQuantity + 1,\r\n            },\r\n            ...state.slice(addedCartItemIndex + 1),\r\n          ];\r\n        }\r\n      } else {\r\n        if (!action.color || action.color === \"\") {\r\n          const addedCartItem = state.find(\r\n            (item) => item.id === action.product.id\r\n          );\r\n          const addedCartItemIndex =\r\n            addedCartItem && state.indexOf(addedCartItem);\r\n          if (!addedCartItem) {\r\n            return [\r\n              ...state,\r\n              {\r\n                ...action.product,\r\n                cartQuantity: action.quantity || 1,\r\n                cartId: uuidv4(),\r\n              },\r\n            ];\r\n          } else {\r\n            return [\r\n              ...state.slice(0, addedCartItemIndex),\r\n              {\r\n                ...addedCartItem,\r\n                cartQuantity: action.quantity\r\n                  ? addedCartItem.cartQuantity + action.quantity\r\n                  : addedCartItem.cartQuantity + 1,\r\n              },\r\n              ...state.slice(addedCartItemIndex + 1),\r\n            ];\r\n          }\r\n        } else {\r\n          const addedCartItem = state.find(\r\n            (item) =>\r\n              item.id === action.product.id &&\r\n              item.selectedColor &&\r\n              item.selectedColor === action.color\r\n          );\r\n          const addedCartItemIndex =\r\n            addedCartItem && state.indexOf(addedCartItem);\r\n          if (!addedCartItem) {\r\n            return [\r\n              ...state,\r\n              {\r\n                ...action.product,\r\n                cartQuantity: action.quantity || 1,\r\n                selectedColor: action.color,\r\n                cartId: uuidv4(),\r\n              },\r\n            ];\r\n          } else {\r\n            return [\r\n              ...state.slice(0, addedCartItemIndex),\r\n              {\r\n                ...addedCartItem,\r\n                cartQuantity: action.quantity\r\n                  ? addedCartItem.cartQuantity + action.quantity\r\n                  : addedCartItem.cartQuantity + 1,\r\n              },\r\n              ...state.slice(addedCartItemIndex + 1),\r\n            ];\r\n          }\r\n        }\r\n      }\r\n    case CART.REMOVE_FROM_CART:\r\n      return [\r\n        ...state.slice(0, cartItemIndex),\r\n        ...state.slice(cartItemIndex + 1),\r\n      ];\r\n    case CART.REMOVE_ALL_FROM_CART:\r\n      return [];\r\n    case CART.INCREASE_QUANTITY_CART:\r\n      return [\r\n        ...state.slice(0, cartItemIndex),\r\n        { ...cartItem, cartQuantity: cartItem.cartQuantity + 1 },\r\n        ...state.slice(cartItemIndex + 1),\r\n      ];\r\n    case CART.DECREASE_QUANTITY_CART:\r\n      if (cartItem.cartQuantity < 2) {\r\n        return;\r\n      }\r\n      return [\r\n        ...state.slice(0, cartItemIndex),\r\n        { ...cartItem, cartQuantity: cartItem.cartQuantity - 1 },\r\n        ...state.slice(cartItemIndex + 1),\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
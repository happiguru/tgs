{"ast":null,"code":"import { formatCurrency } from \"./utils\";\nexport const checkProductInCart = (cartArr, pid, color) => {\n  if (cartArr || cartArr.length > 0) {\n    if (color && color !== \"\") {\n      return cartArr.find(item => item.id === pid && item.selectedColor && item.selectedColor === color);\n    }\n\n    return cartArr.find(item => item.id === pid);\n  }\n};\nexport const getAvaiableQuantityInCart = (cartArr, pid, quantity) => {\n  let arr = cartArr.filter(item => item.id === pid);\n\n  if (cartArr || cartArr.length > 0) {\n    if (arr.length > 0) {\n      let result = arr.length > 0 && arr.reduce((total, num) => total + num.cartQuantity, 0);\n      return result && quantity - result;\n    } else {\n      return quantity;\n    }\n  }\n\n  return quantity;\n};\nexport const checkProductInWishList = (wishlistArr, productId) => {\n  return wishlistArr.find(item => item.id === productId);\n};\nexport const calculateTotalPrice = (cartArr, isformatCurrency) => {\n  let total = 0;\n  cartArr.forEach(item => total += item.price * item.cartQuantity);\n  return isformatCurrency ? formatCurrency(total) : total;\n};","map":{"version":3,"sources":["/home/hguruman/WORK/gents/tgs/src/common/shopUtils.js"],"names":["formatCurrency","checkProductInCart","cartArr","pid","color","length","find","item","id","selectedColor","getAvaiableQuantityInCart","quantity","arr","filter","result","reduce","total","num","cartQuantity","checkProductInWishList","wishlistArr","productId","calculateTotalPrice","isformatCurrency","forEach","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,SAA/B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,OAAD,EAAUC,GAAV,EAAeC,KAAf,KAAyB;AACzD,MAAIF,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAAhC,EAAmC;AACjC,QAAID,KAAK,IAAIA,KAAK,KAAK,EAAvB,EAA2B;AACzB,aAAOF,OAAO,CAACI,IAAR,CACJC,IAAD,IACEA,IAAI,CAACC,EAAL,KAAYL,GAAZ,IAAmBI,IAAI,CAACE,aAAxB,IAAyCF,IAAI,CAACE,aAAL,KAAuBL,KAF7D,CAAP;AAID;;AACD,WAAOF,OAAO,CAACI,IAAR,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,GAAnC,CAAP;AACD;AACF,CAVM;AAYP,OAAO,MAAMO,yBAAyB,GAAG,CAACR,OAAD,EAAUC,GAAV,EAAeQ,QAAf,KAA4B;AACnE,MAAIC,GAAG,GAAGV,OAAO,CAACW,MAAR,CAAgBN,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,GAArC,CAAV;;AACA,MAAID,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAAhC,EAAmC;AACjC,QAAIO,GAAG,CAACP,MAAJ,GAAa,CAAjB,EAAoB;AAClB,UAAIS,MAAM,GACRF,GAAG,CAACP,MAAJ,GAAa,CAAb,IACAO,GAAG,CAACG,MAAJ,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgBD,KAAK,GAAGC,GAAG,CAACC,YAAvC,EAAqD,CAArD,CAFF;AAGA,aAAOJ,MAAM,IAAIH,QAAQ,GAAGG,MAA5B;AACD,KALD,MAKO;AACL,aAAOH,QAAP;AACD;AACF;;AACD,SAAOA,QAAP;AACD,CAbM;AAeP,OAAO,MAAMQ,sBAAsB,GAAG,CAACC,WAAD,EAAcC,SAAd,KAA4B;AAChE,SAAOD,WAAW,CAACd,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYa,SAAvC,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,mBAAmB,GAAG,CAACpB,OAAD,EAAUqB,gBAAV,KAA+B;AAChE,MAAIP,KAAK,GAAG,CAAZ;AACAd,EAAAA,OAAO,CAACsB,OAAR,CAAiBjB,IAAD,IAAWS,KAAK,IAAIT,IAAI,CAACkB,KAAL,GAAalB,IAAI,CAACW,YAAtD;AACA,SAAOK,gBAAgB,GAAGvB,cAAc,CAACgB,KAAD,CAAjB,GAA2BA,KAAlD;AACD,CAJM","sourcesContent":["import { formatCurrency } from \"./utils\";\r\n\r\nexport const checkProductInCart = (cartArr, pid, color) => {\r\n  if (cartArr || cartArr.length > 0) {\r\n    if (color && color !== \"\") {\r\n      return cartArr.find(\r\n        (item) =>\r\n          item.id === pid && item.selectedColor && item.selectedColor === color\r\n      );\r\n    }\r\n    return cartArr.find((item) => item.id === pid);\r\n  }\r\n};\r\n\r\nexport const getAvaiableQuantityInCart = (cartArr, pid, quantity) => {\r\n  let arr = cartArr.filter((item) => item.id === pid);\r\n  if (cartArr || cartArr.length > 0) {\r\n    if (arr.length > 0) {\r\n      let result =\r\n        arr.length > 0 &&\r\n        arr.reduce((total, num) => total + num.cartQuantity, 0);\r\n      return result && quantity - result;\r\n    } else {\r\n      return quantity;\r\n    }\r\n  }\r\n  return quantity;\r\n};\r\n\r\nexport const checkProductInWishList = (wishlistArr, productId) => {\r\n  return wishlistArr.find((item) => item.id === productId);\r\n};\r\n\r\nexport const calculateTotalPrice = (cartArr, isformatCurrency) => {\r\n  let total = 0;\r\n  cartArr.forEach((item) => (total += item.price * item.cartQuantity));\r\n  return isformatCurrency ? formatCurrency(total) : total;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/hguruman/WORK/gents/tgs/src/components/Sections/CallToAction/CTAOne.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from \"react-hook-form\";\nimport SectionTitleOne from \"../SectionTitle/SectionTitleOne\";\nexport default function CTAOne() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm({\n    mode: \"onChange\"\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return __jsx(\"div\", {\n    className: \"cta -style-1\",\n    style: {\n      backgroundImage: 'url(\"/assets/images/cta/CTAOne/1.png\")'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12 col-md-6 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"cta__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(SectionTitleOne, {\n    align: \"center\",\n    spaceBottom: \"1.875em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, \"Book Service\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"cta__form__detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"input-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Your name\",\n    name: \"name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }), errors.name && __jsx(\"span\", {\n    className: \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Please provide a valid name\")), __jsx(\"div\", {\n    className: \"input-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Your phone\",\n    name: \"phone\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }), errors.phone && __jsx(\"span\", {\n    className: \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Please provide a valid phone number\")), __jsx(\"div\", {\n    className: \"input-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(\"select\", {\n    name: \"service\",\n    ref: register({\n      required: true\n    }),\n    className: \"customed-select\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Choose a services\"), [\"Spa\", \"Salon\", \"Nail\"].map((item, index) => __jsx(\"option\", {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, item))), errors.service && __jsx(\"span\", {\n    className: \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Please choose a service\")), __jsx(\"div\", {\n    className: \"input-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(\"select\", {\n    name: \"date\",\n    ref: register({\n      required: true\n    }),\n    className: \"customed-select\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Choose a services\"), [\"Yesterday\", \"Today\", \"Tomorow\"].map((item, index) => __jsx(\"option\", {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, item))), errors.date && __jsx(\"span\", {\n    className: \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Please choose a date\")), __jsx(\"button\", {\n    className: \"btn -light-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Appoitment\")))))));\n}","map":{"version":3,"sources":["/home/hguruman/WORK/gents/tgs/src/components/Sections/CallToAction/CTAOne.js"],"names":["useForm","SectionTitleOne","CTAOne","register","handleSubmit","watch","errors","mode","onSubmit","data","console","log","backgroundImage","required","name","phone","map","item","index","service","date"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\r\n\r\nimport SectionTitleOne from \"../SectionTitle/SectionTitleOne\";\r\n\r\nexport default function CTAOne() {\r\n  const { register, handleSubmit, watch, errors } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"cta -style-1\"\r\n      style={{ backgroundImage: 'url(\"/assets/images/cta/CTAOne/1.png\")' }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6 mx-auto\">\r\n            <div className=\"cta__form\">\r\n              <SectionTitleOne align=\"center\" spaceBottom=\"1.875em\">\r\n                Book Service\r\n              </SectionTitleOne>\r\n              <form\r\n                onSubmit={handleSubmit(onSubmit)}\r\n                className=\"cta__form__detail\"\r\n              >\r\n                <div className=\"input-validator\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Your name\"\r\n                    name=\"name\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  {errors.name && (\r\n                    <span className=\"input-error\">\r\n                      Please provide a valid name\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"input-validator\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Your phone\"\r\n                    name=\"phone\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  {errors.phone && (\r\n                    <span className=\"input-error\">\r\n                      Please provide a valid phone number\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"input-validator\">\r\n                  <select\r\n                    name=\"service\"\r\n                    ref={register({ required: true })}\r\n                    className=\"customed-select\"\r\n                    defaultValue=\"\"\r\n                  >\r\n                    <option value=\"\" hidden>\r\n                      Choose a services\r\n                    </option>\r\n                    {[\"Spa\", \"Salon\", \"Nail\"].map((item, index) => (\r\n                      <option key={index} value={item}>\r\n                        {item}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.service && (\r\n                    <span className=\"input-error\">Please choose a service</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"input-validator\">\r\n                  <select\r\n                    name=\"date\"\r\n                    ref={register({ required: true })}\r\n                    className=\"customed-select\"\r\n                    defaultValue=\"\"\r\n                  >\r\n                    <option value=\"\" hidden>\r\n                      Choose a services\r\n                    </option>\r\n                    {[\"Yesterday\", \"Today\", \"Tomorow\"].map((item, index) => (\r\n                      <option key={index} value={item}>\r\n                        {item}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.date && (\r\n                    <span className=\"input-error\">Please choose a date</span>\r\n                  )}\r\n                </div>\r\n                <button className=\"btn -light-red\">Appoitment</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
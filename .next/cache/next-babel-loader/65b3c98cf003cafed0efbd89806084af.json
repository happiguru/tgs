{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/hguruman/WORK/gents/tgs/src/components/Other/SubcribeEmail.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport classNames from \"classnames\";\n\nvar CustomForm = function CustomForm(_ref) {\n  var status = _ref.status,\n      message = _ref.message,\n      onValidated = _ref.onValidated,\n      alertColor = _ref.alertColor,\n      className = _ref.className,\n      placeholder = _ref.placeholder,\n      btnContent = _ref.btnContent,\n      children = _ref.children;\n  var email;\n\n  var submit = function submit() {\n    email && email.value.indexOf(\"@\") > -1 && onValidated({\n      EMAIL: email.value\n    });\n  };\n\n  function renderStatus(stt) {\n    switch (stt) {\n      case \"sending\":\n        return __jsx(\"div\", {\n          style: {\n            color: alertColor,\n            fontSize: \"14px\",\n            marginTop: \"15px\",\n            lineHeight: \"1.3\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }, \"sending...\");\n\n      case \"error\":\n        return __jsx(\"div\", {\n          style: {\n            color: alertColor,\n            fontSize: \"14px\",\n            marginTop: \"15px\",\n            lineHeight: \"1.3\"\n          },\n          dangerouslySetInnerHTML: {\n            __html: message\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }\n        });\n\n      case \"success\":\n        return __jsx(\"div\", {\n          style: {\n            color: alertColor,\n            fontSize: \"14px\",\n            marginTop: \"15px\",\n            lineHeight: \"1.3\"\n          },\n          dangerouslySetInnerHTML: {\n            __html: message\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return null;\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"subscribe-form \".concat(classNames(className)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"mc-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    id: \"mc-form-email\",\n    className: \"email\",\n    ref: function ref(node) {\n      return email = node;\n    },\n    type: \"email\",\n    placeholder: placeholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), children, __jsx(\"button\", {\n    className: \"button\",\n    onClick: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, btnContent || \"Subribe\")), renderStatus(status));\n};\n\n_c = CustomForm;\n\nvar SubscribeEmail = function SubscribeEmail(_ref2) {\n  var mailchimpUrl = _ref2.mailchimpUrl,\n      alertColor = _ref2.alertColor,\n      className = _ref2.className,\n      placeholder = _ref2.placeholder,\n      btnContent = _ref2.btnContent,\n      children = _ref2.children;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(MailchimpSubscribe, {\n    url: mailchimpUrl,\n    render: function render(_ref3) {\n      var subscribe = _ref3.subscribe,\n          status = _ref3.status,\n          message = _ref3.message;\n      return __jsx(CustomForm, {\n        className: className,\n        status: status,\n        message: message,\n        onValidated: function onValidated(formData) {\n          return subscribe(formData);\n        },\n        alertColor: alertColor,\n        placeholder: placeholder,\n        btnContent: btnContent,\n        children: children,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c2 = SubscribeEmail;\nexport default SubscribeEmail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomForm\");\n$RefreshReg$(_c2, \"SubscribeEmail\");","map":{"version":3,"sources":["/home/hguruman/WORK/gents/tgs/src/components/Other/SubcribeEmail.js"],"names":["MailchimpSubscribe","classNames","CustomForm","status","message","onValidated","alertColor","className","placeholder","btnContent","children","email","submit","value","indexOf","EMAIL","renderStatus","stt","color","fontSize","marginTop","lineHeight","__html","node","SubscribeEmail","mailchimpUrl","subscribe","formData"],"mappings":"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","sourcesContent":["import MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\nimport classNames from \"classnames\";\r\n\r\nconst CustomForm = ({\r\n  status,\r\n  message,\r\n  onValidated,\r\n  alertColor,\r\n  className,\r\n  placeholder,\r\n  btnContent,\r\n  children,\r\n}) => {\r\n  let email;\r\n  const submit = () => {\r\n    email &&\r\n      email.value.indexOf(\"@\") > -1 &&\r\n      onValidated({\r\n        EMAIL: email.value,\r\n      });\r\n  };\r\n\r\n  function renderStatus(stt) {\r\n    switch (stt) {\r\n      case \"sending\":\r\n        return (\r\n          <div\r\n            style={{\r\n              color: alertColor,\r\n              fontSize: \"14px\",\r\n              marginTop: \"15px\",\r\n              lineHeight: \"1.3\",\r\n            }}\r\n          >\r\n            sending...\r\n          </div>\r\n        );\r\n      case \"error\":\r\n        return (\r\n          <div\r\n            style={{\r\n              color: alertColor,\r\n              fontSize: \"14px\",\r\n              marginTop: \"15px\",\r\n              lineHeight: \"1.3\",\r\n            }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        );\r\n      case \"success\":\r\n        return (\r\n          <div\r\n            style={{\r\n              color: alertColor,\r\n              fontSize: \"14px\",\r\n              marginTop: \"15px\",\r\n              lineHeight: \"1.3\",\r\n            }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`subscribe-form ${classNames(className)}`}>\r\n      <div className=\"mc-form\">\r\n        <input\r\n          id=\"mc-form-email\"\r\n          className=\"email\"\r\n          ref={(node) => (email = node)}\r\n          type=\"email\"\r\n          placeholder={placeholder}\r\n        />\r\n        {children}\r\n        <button className=\"button\" onClick={submit}>\r\n          {btnContent || \"Subribe\"}\r\n        </button>\r\n      </div>\r\n      {renderStatus(status)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SubscribeEmail = ({\r\n  mailchimpUrl,\r\n  alertColor,\r\n  className,\r\n  placeholder,\r\n  btnContent,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <MailchimpSubscribe\r\n        url={mailchimpUrl}\r\n        render={({ subscribe, status, message }) => (\r\n          <CustomForm\r\n            className={className}\r\n            status={status}\r\n            message={message}\r\n            onValidated={(formData) => subscribe(formData)}\r\n            alertColor={alertColor}\r\n            placeholder={placeholder}\r\n            btnContent={btnContent}\r\n            children={children}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscribeEmail;\r\n"]},"metadata":{},"sourceType":"module"}
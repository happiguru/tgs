{"ast":null,"code":"import { formatCurrency } from \"./utils\";\nexport var checkProductInCart = function checkProductInCart(cartArr, pid, color) {\n  if (cartArr || cartArr.length > 0) {\n    if (color && color !== \"\") {\n      return cartArr.find(function (item) {\n        return item.id === pid && item.selectedColor && item.selectedColor === color;\n      });\n    }\n\n    return cartArr.find(function (item) {\n      return item.id === pid;\n    });\n  }\n};\nexport var getAvaiableQuantityInCart = function getAvaiableQuantityInCart(cartArr, pid, quantity) {\n  var arr = cartArr.filter(function (item) {\n    return item.id === pid;\n  });\n\n  if (cartArr || cartArr.length > 0) {\n    if (arr.length > 0) {\n      var result = arr.length > 0 && arr.reduce(function (total, num) {\n        return total + num.cartQuantity;\n      }, 0);\n      return result && quantity - result;\n    } else {\n      return quantity;\n    }\n  }\n\n  return quantity;\n};\nexport var checkProductInWishList = function checkProductInWishList(wishlistArr, productId) {\n  return wishlistArr.find(function (item) {\n    return item.id === productId;\n  });\n};\nexport var calculateTotalPrice = function calculateTotalPrice(cartArr, isformatCurrency) {\n  var total = 0;\n  cartArr.forEach(function (item) {\n    return total += item.price * item.cartQuantity;\n  });\n  return isformatCurrency ? formatCurrency(total) : total;\n};","map":{"version":3,"sources":["/home/hguruman/WORK/gents/tgs/src/common/shopUtils.js"],"names":["formatCurrency","checkProductInCart","cartArr","pid","color","length","find","item","id","selectedColor","getAvaiableQuantityInCart","quantity","arr","filter","result","reduce","total","num","cartQuantity","checkProductInWishList","wishlistArr","productId","calculateTotalPrice","isformatCurrency","forEach","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,SAA/B;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAUC,GAAV,EAAeC,KAAf,EAAyB;AACzD,MAAIF,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAAhC,EAAmC;AACjC,QAAID,KAAK,IAAIA,KAAK,KAAK,EAAvB,EAA2B;AACzB,aAAOF,OAAO,CAACI,IAAR,CACL,UAACC,IAAD;AAAA,eACEA,IAAI,CAACC,EAAL,KAAYL,GAAZ,IAAmBI,IAAI,CAACE,aAAxB,IAAyCF,IAAI,CAACE,aAAL,KAAuBL,KADlE;AAAA,OADK,CAAP;AAID;;AACD,WAAOF,OAAO,CAACI,IAAR,CAAa,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYL,GAAtB;AAAA,KAAb,CAAP;AACD;AACF,CAVM;AAYP,OAAO,IAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACR,OAAD,EAAUC,GAAV,EAAeQ,QAAf,EAA4B;AACnE,MAAIC,GAAG,GAAGV,OAAO,CAACW,MAAR,CAAe,UAACN,IAAD;AAAA,WAAUA,IAAI,CAACC,EAAL,KAAYL,GAAtB;AAAA,GAAf,CAAV;;AACA,MAAID,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAAhC,EAAmC;AACjC,QAAIO,GAAG,CAACP,MAAJ,GAAa,CAAjB,EAAoB;AAClB,UAAIS,MAAM,GACRF,GAAG,CAACP,MAAJ,GAAa,CAAb,IACAO,GAAG,CAACG,MAAJ,CAAW,UAACC,KAAD,EAAQC,GAAR;AAAA,eAAgBD,KAAK,GAAGC,GAAG,CAACC,YAA5B;AAAA,OAAX,EAAqD,CAArD,CAFF;AAGA,aAAOJ,MAAM,IAAIH,QAAQ,GAAGG,MAA5B;AACD,KALD,MAKO;AACL,aAAOH,QAAP;AACD;AACF;;AACD,SAAOA,QAAP;AACD,CAbM;AAeP,OAAO,IAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,WAAD,EAAcC,SAAd,EAA4B;AAChE,SAAOD,WAAW,CAACd,IAAZ,CAAiB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,EAAL,KAAYa,SAAtB;AAAA,GAAjB,CAAP;AACD,CAFM;AAIP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACpB,OAAD,EAAUqB,gBAAV,EAA+B;AAChE,MAAIP,KAAK,GAAG,CAAZ;AACAd,EAAAA,OAAO,CAACsB,OAAR,CAAgB,UAACjB,IAAD;AAAA,WAAWS,KAAK,IAAIT,IAAI,CAACkB,KAAL,GAAalB,IAAI,CAACW,YAAtC;AAAA,GAAhB;AACA,SAAOK,gBAAgB,GAAGvB,cAAc,CAACgB,KAAD,CAAjB,GAA2BA,KAAlD;AACD,CAJM","sourcesContent":["import { formatCurrency } from \"./utils\";\r\n\r\nexport const checkProductInCart = (cartArr, pid, color) => {\r\n  if (cartArr || cartArr.length > 0) {\r\n    if (color && color !== \"\") {\r\n      return cartArr.find(\r\n        (item) =>\r\n          item.id === pid && item.selectedColor && item.selectedColor === color\r\n      );\r\n    }\r\n    return cartArr.find((item) => item.id === pid);\r\n  }\r\n};\r\n\r\nexport const getAvaiableQuantityInCart = (cartArr, pid, quantity) => {\r\n  let arr = cartArr.filter((item) => item.id === pid);\r\n  if (cartArr || cartArr.length > 0) {\r\n    if (arr.length > 0) {\r\n      let result =\r\n        arr.length > 0 &&\r\n        arr.reduce((total, num) => total + num.cartQuantity, 0);\r\n      return result && quantity - result;\r\n    } else {\r\n      return quantity;\r\n    }\r\n  }\r\n  return quantity;\r\n};\r\n\r\nexport const checkProductInWishList = (wishlistArr, productId) => {\r\n  return wishlistArr.find((item) => item.id === productId);\r\n};\r\n\r\nexport const calculateTotalPrice = (cartArr, isformatCurrency) => {\r\n  let total = 0;\r\n  cartArr.forEach((item) => (total += item.price * item.cartQuantity));\r\n  return isformatCurrency ? formatCurrency(total) : total;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/hguruman/WORK/gents/tgs/src/components/Control/Select.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nexport default function Select(props) {\n  const {\n    options,\n    className,\n    getValue,\n    id,\n    placeholder\n  } = props;\n  return __jsx(\"select\", {\n    id: id,\n    onChange: e => getValue(e.target.value),\n    className: `customed-select ${classNames(className)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, placeholder && __jsx(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, placeholder), options.map((opt, index) => {\n    if (typeof opt === \"string\") {\n      return __jsx(\"option\", {\n        value: opt,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, opt);\n    } else {\n      return __jsx(\"option\", {\n        value: opt.value,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, opt.name);\n    }\n  }));\n}\nSelect.propTypes = {\n  options: PropTypes.array,\n  className: PropTypes.string\n};","map":{"version":3,"sources":["/home/hguruman/WORK/gents/tgs/src/components/Control/Select.js"],"names":["PropTypes","classNames","Select","props","options","className","getValue","id","placeholder","e","target","value","map","opt","index","name","propTypes","array","string"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA,EAAhC;AAAoCC,IAAAA;AAApC,MAAoDL,KAA1D;AACA,SACE;AACE,IAAA,EAAE,EAAEI,EADN;AAEE,IAAA,QAAQ,EAAGE,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAGE,IAAA,SAAS,EAAG,mBAAkBV,UAAU,CAACI,SAAD,CAAY,EAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGG,WAAW,IACV;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAiB,IAAA,QAAQ,MAAzB;AAA0B,IAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WADH,CANJ,EAUGJ,OAAO,CAACQ,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3B,QAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AAC3B,aACE;AAAQ,QAAA,KAAK,EAAEA,GAAf;AAAoB,QAAA,GAAG,EAAEC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,GADH,CADF;AAKD,KAND,MAMO;AACL,aACE;AAAQ,QAAA,KAAK,EAAEA,GAAG,CAACF,KAAnB;AAA0B,QAAA,GAAG,EAAEG,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,GAAG,CAACE,IADP,CADF;AAKD;AACF,GAdA,CAVH,CADF;AA4BD;AAEDb,MAAM,CAACc,SAAP,GAAmB;AACjBZ,EAAAA,OAAO,EAAEJ,SAAS,CAACiB,KADF;AAEjBZ,EAAAA,SAAS,EAAEL,SAAS,CAACkB;AAFJ,CAAnB","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function Select(props) {\r\n  const { options, className, getValue, id, placeholder } = props;\r\n  return (\r\n    <select\r\n      id={id}\r\n      onChange={(e) => getValue(e.target.value)}\r\n      className={`customed-select ${classNames(className)}`}\r\n    >\r\n      {placeholder && (\r\n        <option value=\"\" disabled selected>\r\n          {placeholder}\r\n        </option>\r\n      )}\r\n      {options.map((opt, index) => {\r\n        if (typeof opt === \"string\") {\r\n          return (\r\n            <option value={opt} key={index}>\r\n              {opt}\r\n            </option>\r\n          );\r\n        } else {\r\n          return (\r\n            <option value={opt.value} key={index}>\r\n              {opt.name}\r\n            </option>\r\n          );\r\n        }\r\n      })}\r\n    </select>\r\n  );\r\n}\r\n\r\nSelect.propTypes = {\r\n  options: PropTypes.array,\r\n  className: PropTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
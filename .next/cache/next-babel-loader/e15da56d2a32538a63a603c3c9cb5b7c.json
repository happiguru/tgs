{"ast":null,"code":"//get product\nexport var getProducts = function getProducts(products, category, type, limit) {\n  category = category && category.toLowerCase() === \"all\" ? \"\" : category;\n  var finalProducts = category ? products.filter(function (product) {\n    return product.category.toLowerCase() === category.toLowerCase();\n  }) : products;\n\n  if (type && type === \"new\") {\n    var newProducts = finalProducts.filter(function (product) {\n      return product[\"new\"];\n    });\n    return newProducts.slice(0, limit ? limit : newProducts.length);\n  } else {\n    return finalProducts && finalProducts.slice(0, limit ? limit : finalProducts.length);\n  }\n}; //get product by slug\n\nexport var getProductBySlug = function getProductBySlug(products, slug) {\n  return slug ? products.find(function (product) {\n    return product.slug.toLowerCase() === slug.toLowerCase();\n  }) : null;\n}; //sort product\n\nexport var getProductBySort = function getProductBySort(products, type, limit) {\n  function sortWithCondition(arr, value) {\n    var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var num = reverse ? -1 : 1;\n    return products.slice(0, limit ? limit : products.length).sort(function (a, b) {\n      if (a[value] < b[value]) {\n        return -1 * num;\n      }\n\n      if (a[value] > b[value]) {\n        return 1 * num;\n      }\n\n      return 0;\n    });\n  }\n\n  if (!type || type === \"default\") {\n    return products;\n  } else if (type === \"az\") {\n    return sortWithCondition(products, \"name\");\n  } else if (type === \"za\") {\n    return sortWithCondition(products, \"name\", true);\n  } else if (type === \"lowToHigh\") {\n    return sortWithCondition(products, \"price\");\n  } else if (type === \"highToLow\") {\n    return sortWithCondition(products, \"price\", true);\n  } else {\n    return products.slice(0, limit ? limit : products.length);\n  }\n}; //get product by price\n\nexport var getProductByPrice = function getProductByPrice(products, from, to, limit) {\n  if (from && !to) {\n    return products.filter(function (p) {\n      return p.price > from;\n    });\n  } else if (!from && to) {\n    return products.filter(function (p) {\n      return p.price < to;\n    });\n  } else if (!from && !to) {\n    return products;\n  } else {\n    return products.filter(function (p) {\n      return p.price > from && p.price < to;\n    });\n  }\n}; //get product by brand\n\nexport var getProductByBrand = function getProductByBrand(products, brand) {\n  return brand ? products.filter(function (p) {\n    return p.brand.toLowerCase() === brand.toLowerCase();\n  }) : products;\n}; //get product by filter\n\nexport var getProductbyFilter = function getProductbyFilter(products, sortType, category, from, to, brand, limit) {\n  var sortedProduct;\n\n  if (category) {\n    var productCategory = getProducts(products, category);\n\n    if (to && !brand) {\n      var productPrice = getProductByPrice(productCategory, from, to);\n      sortedProduct = getProductBySort(productPrice, sortType);\n    } else if (!to && brand) {\n      var productBrand = getProductByBrand(productCategory, brand);\n      sortedProduct = getProductBySort(productBrand, sortType);\n    } else if (to && brand) {\n      var _productBrand = getProductByBrand(productCategory, brand);\n\n      var _productPrice = getProductByPrice(productCategory, from, to);\n\n      var commonProducts = _productBrand.filter(function (o1) {\n        return _productPrice.some(function (o2) {\n          return o1.id === o2.id;\n        });\n      });\n\n      sortedProduct = getProductBySort(commonProducts, sortType);\n    } else {\n      sortedProduct = getProductBySort(productCategory, sortType);\n    }\n  } else {\n    sortedProduct = getProductBySort(products, sortType);\n  }\n\n  return sortedProduct.slice(0, limit || products.length);\n};","map":{"version":3,"sources":["/home/hguruman/WORK/gents/tgs/src/common/productSelect.js"],"names":["getProducts","products","category","type","limit","toLowerCase","finalProducts","filter","product","newProducts","slice","length","getProductBySlug","slug","find","getProductBySort","sortWithCondition","arr","value","reverse","num","sort","a","b","getProductByPrice","from","to","p","price","getProductByBrand","brand","getProductbyFilter","sortType","sortedProduct","productCategory","productPrice","productBrand","commonProducts","o1","some","o2","id"],"mappings":"AAAA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA2BC,KAA3B,EAAqC;AAC9DF,EAAAA,QAAQ,GAAGA,QAAQ,IAAIA,QAAQ,CAACG,WAAT,OAA2B,KAAvC,GAA+C,EAA/C,GAAoDH,QAA/D;AACA,MAAMI,aAAa,GAAGJ,QAAQ,GAC1BD,QAAQ,CAACM,MAAT,CACE,UAACC,OAAD;AAAA,WAAaA,OAAO,CAACN,QAAR,CAAiBG,WAAjB,OAAmCH,QAAQ,CAACG,WAAT,EAAhD;AAAA,GADF,CAD0B,GAI1BJ,QAJJ;;AAKA,MAAIE,IAAI,IAAIA,IAAI,KAAK,KAArB,EAA4B;AAC1B,QAAMM,WAAW,GAAGH,aAAa,CAACC,MAAd,CAAqB,UAACC,OAAD;AAAA,aAAaA,OAAO,OAApB;AAAA,KAArB,CAApB;AACA,WAAOC,WAAW,CAACC,KAAZ,CAAkB,CAAlB,EAAqBN,KAAK,GAAGA,KAAH,GAAWK,WAAW,CAACE,MAAjD,CAAP;AACD,GAHD,MAGO;AACL,WACEL,aAAa,IACbA,aAAa,CAACI,KAAd,CAAoB,CAApB,EAAuBN,KAAK,GAAGA,KAAH,GAAWE,aAAa,CAACK,MAArD,CAFF;AAID;AACF,CAhBM,C,CAkBP;;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACX,QAAD,EAAWY,IAAX,EAAoB;AAClD,SAAOA,IAAI,GACPZ,QAAQ,CAACa,IAAT,CACE,UAACN,OAAD;AAAA,WAAaA,OAAO,CAACK,IAAR,CAAaR,WAAb,OAA+BQ,IAAI,CAACR,WAAL,EAA5C;AAAA,GADF,CADO,GAIP,IAJJ;AAKD,CANM,C,CAQP;;AACA,OAAO,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACd,QAAD,EAAWE,IAAX,EAAiBC,KAAjB,EAA2B;AACzD,WAASY,iBAAT,CAA2BC,GAA3B,EAAgCC,KAAhC,EAAwD;AAAA,QAAjBC,OAAiB,uEAAP,KAAO;AACtD,QAAIC,GAAG,GAAGD,OAAO,GAAG,CAAC,CAAJ,GAAQ,CAAzB;AACA,WAAOlB,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAkBN,KAAK,GAAGA,KAAH,GAAWH,QAAQ,CAACU,MAA3C,EAAmDU,IAAnD,CAAwD,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACvE,UAAID,CAAC,CAACJ,KAAD,CAAD,GAAWK,CAAC,CAACL,KAAD,CAAhB,EAAyB;AACvB,eAAO,CAAC,CAAD,GAAKE,GAAZ;AACD;;AACD,UAAIE,CAAC,CAACJ,KAAD,CAAD,GAAWK,CAAC,CAACL,KAAD,CAAhB,EAAyB;AACvB,eAAO,IAAIE,GAAX;AACD;;AACD,aAAO,CAAP;AACD,KARM,CAAP;AASD;;AACD,MAAI,CAACjB,IAAD,IAASA,IAAI,KAAK,SAAtB,EAAiC;AAC/B,WAAOF,QAAP;AACD,GAFD,MAEO,IAAIE,IAAI,KAAK,IAAb,EAAmB;AACxB,WAAOa,iBAAiB,CAACf,QAAD,EAAW,MAAX,CAAxB;AACD,GAFM,MAEA,IAAIE,IAAI,KAAK,IAAb,EAAmB;AACxB,WAAOa,iBAAiB,CAACf,QAAD,EAAW,MAAX,EAAmB,IAAnB,CAAxB;AACD,GAFM,MAEA,IAAIE,IAAI,KAAK,WAAb,EAA0B;AAC/B,WAAOa,iBAAiB,CAACf,QAAD,EAAW,OAAX,CAAxB;AACD,GAFM,MAEA,IAAIE,IAAI,KAAK,WAAb,EAA0B;AAC/B,WAAOa,iBAAiB,CAACf,QAAD,EAAW,OAAX,EAAoB,IAApB,CAAxB;AACD,GAFM,MAEA;AACL,WAAOA,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAkBN,KAAK,GAAGA,KAAH,GAAWH,QAAQ,CAACU,MAA3C,CAAP;AACD;AACF,CA1BM,C,CA4BP;;AACA,OAAO,IAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,CAACvB,QAAD,EAAWwB,IAAX,EAAiBC,EAAjB,EAAqBtB,KAArB,EAA+B;AAC9D,MAAIqB,IAAI,IAAI,CAACC,EAAb,EAAiB;AACf,WAAOzB,QAAQ,CAACM,MAAT,CAAgB,UAACoB,CAAD;AAAA,aAAOA,CAAC,CAACC,KAAF,GAAUH,IAAjB;AAAA,KAAhB,CAAP;AACD,GAFD,MAEO,IAAI,CAACA,IAAD,IAASC,EAAb,EAAiB;AACtB,WAAOzB,QAAQ,CAACM,MAAT,CAAgB,UAACoB,CAAD;AAAA,aAAOA,CAAC,CAACC,KAAF,GAAUF,EAAjB;AAAA,KAAhB,CAAP;AACD,GAFM,MAEA,IAAI,CAACD,IAAD,IAAS,CAACC,EAAd,EAAkB;AACvB,WAAOzB,QAAP;AACD,GAFM,MAEA;AACL,WAAOA,QAAQ,CAACM,MAAT,CAAgB,UAACoB,CAAD;AAAA,aAAOA,CAAC,CAACC,KAAF,GAAUH,IAAV,IAAkBE,CAAC,CAACC,KAAF,GAAUF,EAAnC;AAAA,KAAhB,CAAP;AACD;AACF,CAVM,C,CAYP;;AACA,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC5B,QAAD,EAAW6B,KAAX,EAAqB;AACpD,SAAOA,KAAK,GACR7B,QAAQ,CAACM,MAAT,CAAgB,UAACoB,CAAD;AAAA,WAAOA,CAAC,CAACG,KAAF,CAAQzB,WAAR,OAA0ByB,KAAK,CAACzB,WAAN,EAAjC;AAAA,GAAhB,CADQ,GAERJ,QAFJ;AAGD,CAJM,C,CAMP;;AACA,OAAO,IAAM8B,kBAAkB,GAAG,SAArBA,kBAAqB,CAChC9B,QADgC,EAEhC+B,QAFgC,EAGhC9B,QAHgC,EAIhCuB,IAJgC,EAKhCC,EALgC,EAMhCI,KANgC,EAOhC1B,KAPgC,EAQ7B;AACH,MAAI6B,aAAJ;;AACA,MAAI/B,QAAJ,EAAc;AACZ,QAAIgC,eAAe,GAAGlC,WAAW,CAACC,QAAD,EAAWC,QAAX,CAAjC;;AACA,QAAIwB,EAAE,IAAI,CAACI,KAAX,EAAkB;AAChB,UAAIK,YAAY,GAAGX,iBAAiB,CAACU,eAAD,EAAkBT,IAAlB,EAAwBC,EAAxB,CAApC;AACAO,MAAAA,aAAa,GAAGlB,gBAAgB,CAACoB,YAAD,EAAeH,QAAf,CAAhC;AACD,KAHD,MAGO,IAAI,CAACN,EAAD,IAAOI,KAAX,EAAkB;AACvB,UAAIM,YAAY,GAAGP,iBAAiB,CAACK,eAAD,EAAkBJ,KAAlB,CAApC;AACAG,MAAAA,aAAa,GAAGlB,gBAAgB,CAACqB,YAAD,EAAeJ,QAAf,CAAhC;AACD,KAHM,MAGA,IAAIN,EAAE,IAAII,KAAV,EAAiB;AACtB,UAAIM,aAAY,GAAGP,iBAAiB,CAACK,eAAD,EAAkBJ,KAAlB,CAApC;;AACA,UAAIK,aAAY,GAAGX,iBAAiB,CAACU,eAAD,EAAkBT,IAAlB,EAAwBC,EAAxB,CAApC;;AACA,UAAIW,cAAc,GAAGD,aAAY,CAAC7B,MAAb,CAAoB,UAAC+B,EAAD;AAAA,eACvCH,aAAY,CAACI,IAAb,CAAkB,UAACC,EAAD;AAAA,iBAAQF,EAAE,CAACG,EAAH,KAAUD,EAAE,CAACC,EAArB;AAAA,SAAlB,CADuC;AAAA,OAApB,CAArB;;AAGAR,MAAAA,aAAa,GAAGlB,gBAAgB,CAACsB,cAAD,EAAiBL,QAAjB,CAAhC;AACD,KAPM,MAOA;AACLC,MAAAA,aAAa,GAAGlB,gBAAgB,CAACmB,eAAD,EAAkBF,QAAlB,CAAhC;AACD;AACF,GAlBD,MAkBO;AACLC,IAAAA,aAAa,GAAGlB,gBAAgB,CAACd,QAAD,EAAW+B,QAAX,CAAhC;AACD;;AACD,SAAOC,aAAa,CAACvB,KAAd,CAAoB,CAApB,EAAuBN,KAAK,IAAIH,QAAQ,CAACU,MAAzC,CAAP;AACD,CAhCM","sourcesContent":["//get product\r\nexport const getProducts = (products, category, type, limit) => {\r\n  category = category && category.toLowerCase() === \"all\" ? \"\" : category;\r\n  const finalProducts = category\r\n    ? products.filter(\r\n        (product) => product.category.toLowerCase() === category.toLowerCase()\r\n      )\r\n    : products;\r\n  if (type && type === \"new\") {\r\n    const newProducts = finalProducts.filter((product) => product.new);\r\n    return newProducts.slice(0, limit ? limit : newProducts.length);\r\n  } else {\r\n    return (\r\n      finalProducts &&\r\n      finalProducts.slice(0, limit ? limit : finalProducts.length)\r\n    );\r\n  }\r\n};\r\n\r\n//get product by slug\r\nexport const getProductBySlug = (products, slug) => {\r\n  return slug\r\n    ? products.find(\r\n        (product) => product.slug.toLowerCase() === slug.toLowerCase()\r\n      )\r\n    : null;\r\n};\r\n\r\n//sort product\r\nexport const getProductBySort = (products, type, limit) => {\r\n  function sortWithCondition(arr, value, reverse = false) {\r\n    let num = reverse ? -1 : 1;\r\n    return products.slice(0, limit ? limit : products.length).sort((a, b) => {\r\n      if (a[value] < b[value]) {\r\n        return -1 * num;\r\n      }\r\n      if (a[value] > b[value]) {\r\n        return 1 * num;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n  if (!type || type === \"default\") {\r\n    return products;\r\n  } else if (type === \"az\") {\r\n    return sortWithCondition(products, \"name\");\r\n  } else if (type === \"za\") {\r\n    return sortWithCondition(products, \"name\", true);\r\n  } else if (type === \"lowToHigh\") {\r\n    return sortWithCondition(products, \"price\");\r\n  } else if (type === \"highToLow\") {\r\n    return sortWithCondition(products, \"price\", true);\r\n  } else {\r\n    return products.slice(0, limit ? limit : products.length);\r\n  }\r\n};\r\n\r\n//get product by price\r\nexport const getProductByPrice = (products, from, to, limit) => {\r\n  if (from && !to) {\r\n    return products.filter((p) => p.price > from);\r\n  } else if (!from && to) {\r\n    return products.filter((p) => p.price < to);\r\n  } else if (!from && !to) {\r\n    return products;\r\n  } else {\r\n    return products.filter((p) => p.price > from && p.price < to);\r\n  }\r\n};\r\n\r\n//get product by brand\r\nexport const getProductByBrand = (products, brand) => {\r\n  return brand\r\n    ? products.filter((p) => p.brand.toLowerCase() === brand.toLowerCase())\r\n    : products;\r\n};\r\n\r\n//get product by filter\r\nexport const getProductbyFilter = (\r\n  products,\r\n  sortType,\r\n  category,\r\n  from,\r\n  to,\r\n  brand,\r\n  limit\r\n) => {\r\n  let sortedProduct;\r\n  if (category) {\r\n    let productCategory = getProducts(products, category);\r\n    if (to && !brand) {\r\n      let productPrice = getProductByPrice(productCategory, from, to);\r\n      sortedProduct = getProductBySort(productPrice, sortType);\r\n    } else if (!to && brand) {\r\n      let productBrand = getProductByBrand(productCategory, brand);\r\n      sortedProduct = getProductBySort(productBrand, sortType);\r\n    } else if (to && brand) {\r\n      let productBrand = getProductByBrand(productCategory, brand);\r\n      let productPrice = getProductByPrice(productCategory, from, to);\r\n      let commonProducts = productBrand.filter((o1) =>\r\n        productPrice.some((o2) => o1.id === o2.id)\r\n      );\r\n      sortedProduct = getProductBySort(commonProducts, sortType);\r\n    } else {\r\n      sortedProduct = getProductBySort(productCategory, sortType);\r\n    }\r\n  } else {\r\n    sortedProduct = getProductBySort(products, sortType);\r\n  }\r\n  return sortedProduct.slice(0, limit || products.length);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}